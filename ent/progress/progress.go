// Code generated by ent, DO NOT EDIT.

package progress

const (
	// Label holds the string label denoting the progress type in the database.
	Label = "progress"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeTeam holds the string denoting the team edge name in mutations.
	EdgeTeam = "team"
	// EdgeAdventure holds the string denoting the adventure edge name in mutations.
	EdgeAdventure = "adventure"
	// EdgeQuestion holds the string denoting the question edge name in mutations.
	EdgeQuestion = "question"
	// Table holds the table name of the progress in the database.
	Table = "progresses"
	// TeamTable is the table that holds the team relation/edge. The primary key declared below.
	TeamTable = "team_progress"
	// TeamInverseTable is the table name for the Team entity.
	// It exists in this package in order to avoid circular dependency with the "team" package.
	TeamInverseTable = "teams"
	// AdventureTable is the table that holds the adventure relation/edge.
	AdventureTable = "progresses"
	// AdventureInverseTable is the table name for the Adventure entity.
	// It exists in this package in order to avoid circular dependency with the "adventure" package.
	AdventureInverseTable = "adventures"
	// AdventureColumn is the table column denoting the adventure relation/edge.
	AdventureColumn = "progress_adventure"
	// QuestionTable is the table that holds the question relation/edge.
	QuestionTable = "progresses"
	// QuestionInverseTable is the table name for the Question entity.
	// It exists in this package in order to avoid circular dependency with the "question" package.
	QuestionInverseTable = "questions"
	// QuestionColumn is the table column denoting the question relation/edge.
	QuestionColumn = "progress_question"
)

// Columns holds all SQL columns for progress fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "progresses"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"progress_adventure",
	"progress_question",
}

var (
	// TeamPrimaryKey and TeamColumn2 are the table columns denoting the
	// primary key for the team relation (M2M).
	TeamPrimaryKey = []string{"team_id", "progress_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
