import{a0 as d,a1 as u,a2 as h}from"./index.b92c290c.js";const p=(r,e)=>{const t=[r,...r.ancestors],a=[e,...e.ancestors];return t.find(s=>a.includes(s))},x=(r,e)=>{const t=[r,...r.ancestors],a=[e,...e.ancestors],s=p(r,e),o=t.indexOf(s),n=o?"../".repeat(o):"",l=a.indexOf(s),i=a.slice(0,l).reverse().map(c=>c.name).join("/");return n+i},k={subscribe:(r,e)=>{const{router:t}=u;return d(N,a=>(s,o,n)=>{n={...{mode:"push"},...n};const i=a(s,o);t.url[n.mode](i)}).subscribe(r,e)}},N={subscribe:(r,e)=>{const{router:t}=u,a=u.fragment.node;return d(t.activeRoute,s=>{const o=t.rootNode.traverse(a.path);return(n,l={})=>{const i=n.startsWith("/")?t.rootNode.path:"",c=o.traverse(i+n);if(!c){console.error("could not find destination node",n);return}const g=p(c,t.rootNode),m=("/"+x(g,c)).replace(/\/index$/,"/"),b={...v(c,s),...l},f=h(m,b,s);return t.getExternalUrl(f)}}).subscribe(r,e)}},v=(r,e)=>{const a=[r,...r.ancestors].reverse().map(s=>{var o;return(o=e.allFragments.find(n=>n.node===s||n.node.path===s.path))==null?void 0:o.params});return Object.assign({},...a)},O={subscribe:(r,e)=>d(u.router.params,t=>t).subscribe(r,e)};export{k as g,O as p};
