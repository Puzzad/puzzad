CREATE SCHEMA "internal";
ALTER SCHEMA "internal" OWNER TO "postgres";
CREATE SCHEMA "public";
ALTER SCHEMA "public" OWNER TO "postgres";
CREATE TABLE "internal"."adjectives" (
    "value" "text" NOT NULL
);
ALTER TABLE "internal"."adjectives" OWNER TO "postgres";
CREATE TABLE "internal"."animals" (
    "value" "text" NOT NULL
);
ALTER TABLE "internal"."animals" OWNER TO "postgres";
CREATE TABLE "internal"."answers" (
    "puzzle" bigint,
    "answer" character varying
);
ALTER TABLE "internal"."answers" OWNER TO "postgres";
CREATE TABLE "internal"."colours" (
    "value" "text" NOT NULL
);
ALTER TABLE "internal"."colours" OWNER TO "postgres";
CREATE TABLE "internal"."hints" (
    "id" bigint NOT NULL,
    "puzzle" bigint,
    "title" character varying,
    "message" character varying,
    "order" bigint
);
ALTER TABLE "internal"."hints" OWNER TO "postgres";
ALTER TABLE "internal"."hints" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "internal"."hints_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE "internal"."secrets" (
    "name" "text" NOT NULL,
    "value" "text" NOT NULL
);
ALTER TABLE "internal"."secrets" OWNER TO "postgres";
CREATE TABLE "internal"."usedhints" (
    "id" bigint NOT NULL,
    "used_at" timestamp with time zone DEFAULT "now"(),
    "hint" bigint,
    "game" character varying
);
ALTER TABLE "internal"."usedhints" OWNER TO "postgres";
ALTER TABLE "internal"."usedhints" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "internal"."usedhints_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE "public"."adventures" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "name" character varying DEFAULT ''::character varying NOT NULL,
    "description" "text" DEFAULT ''::"text" NOT NULL,
    "price" real DEFAULT '0'::real NOT NULL,
    "public" boolean DEFAULT false NOT NULL,
    "promoBackground" "text",
    "promoLogo" "text",
    "firstPuzzle" bigint
);
ALTER TABLE "public"."adventures" OWNER TO "postgres";
ALTER TABLE "public"."adventures" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."adventures_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE "public"."games" (
    "id" bigint NOT NULL,
    "status" character varying DEFAULT '"UNPAID"'::character varying NOT NULL,
    "code" character varying DEFAULT ''::character varying NOT NULL,
    "user" "uuid",
    "adventure" bigint NOT NULL,
    "puzzle" bigint,
    "startTime" timestamp with time zone,
    "endTime" timestamp with time zone
);
ALTER TABLE "public"."games" OWNER TO "postgres";
ALTER TABLE "public"."games" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."games_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE "public"."guesses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "content" "text" NOT NULL,
    "puzzle" bigint NOT NULL,
    "game" character varying NOT NULL,
    "correct" boolean DEFAULT false
);
ALTER TABLE "public"."guesses" OWNER TO "postgres";
ALTER TABLE "public"."guesses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."guesses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE "public"."puzzles" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "title" "text" DEFAULT ''::"text" NOT NULL,
    "next" bigint,
    "content" "text" NOT NULL,
    "adventure" bigint NOT NULL,
    "storage_slug" character varying NOT NULL
);
ALTER TABLE "public"."puzzles" OWNER TO "postgres";
ALTER TABLE "public"."puzzles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."puzzles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "internal"."adjectives"
    ADD CONSTRAINT "adjectives_pkey" PRIMARY KEY ("value");
ALTER TABLE ONLY "internal"."adjectives"
    ADD CONSTRAINT "adjectives_value_key" UNIQUE ("value");
ALTER TABLE ONLY "internal"."animals"
    ADD CONSTRAINT "animals_pkey" PRIMARY KEY ("value");
ALTER TABLE ONLY "internal"."colours"
    ADD CONSTRAINT "colours_pkey" PRIMARY KEY ("value");
ALTER TABLE ONLY "internal"."hints"
    ADD CONSTRAINT "hints_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "internal"."usedhints"
    ADD CONSTRAINT "one_unlock_per_hint" UNIQUE ("hint", "game");
ALTER TABLE ONLY "internal"."secrets"
    ADD CONSTRAINT "secrets_name_key" UNIQUE ("name");
ALTER TABLE ONLY "internal"."hints"
    ADD CONSTRAINT "unique_puzzle_ordering" UNIQUE ("puzzle", "order");
ALTER TABLE ONLY "internal"."usedhints"
    ADD CONSTRAINT "usedhints_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."adventures"
    ADD CONSTRAINT "adventures_name_key" UNIQUE ("name");
ALTER TABLE ONLY "public"."adventures"
    ADD CONSTRAINT "adventures_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_code_key" UNIQUE ("code");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_id_key" UNIQUE ("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."guesses"
    ADD CONSTRAINT "guesses_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."puzzles"
    ADD CONSTRAINT "puzzles_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."adventures"
    ADD CONSTRAINT "unique_name" UNIQUE ("name");
ALTER TABLE ONLY "public"."puzzles"
    ADD CONSTRAINT "unique_slug" UNIQUE ("storage_slug");
ALTER TABLE ONLY "internal"."answers"
    ADD CONSTRAINT "answers_puzzle_fkey" FOREIGN KEY ("puzzle") REFERENCES "public"."puzzles"("id");
ALTER TABLE ONLY "internal"."hints"
    ADD CONSTRAINT "hints_puzzle_fkey" FOREIGN KEY ("puzzle") REFERENCES "public"."puzzles"("id");
ALTER TABLE ONLY "internal"."usedhints"
    ADD CONSTRAINT "usedhints_game_fkey" FOREIGN KEY ("game") REFERENCES "public"."games"("code");
ALTER TABLE ONLY "internal"."usedhints"
    ADD CONSTRAINT "usedhints_hint_fkey" FOREIGN KEY ("hint") REFERENCES "internal"."hints"("id");
ALTER TABLE ONLY "public"."adventures"
    ADD CONSTRAINT "adventures_firstPuzzle_fkey" FOREIGN KEY ("firstPuzzle") REFERENCES "public"."puzzles"("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_adventure_fkey" FOREIGN KEY ("adventure") REFERENCES "public"."adventures"("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_puzzle_fkey" FOREIGN KEY ("puzzle") REFERENCES "public"."puzzles"("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_user_fkey" FOREIGN KEY ("user") REFERENCES "auth"."users"("id") ON DELETE SET NULL;
ALTER TABLE ONLY "public"."guesses"
    ADD CONSTRAINT "guesses_game_fkey" FOREIGN KEY ("game") REFERENCES "public"."games"("code");
ALTER TABLE ONLY "public"."guesses"
    ADD CONSTRAINT "guesses_puzzle_fkey" FOREIGN KEY ("puzzle") REFERENCES "public"."puzzles"("id");
ALTER TABLE ONLY "public"."puzzles"
    ADD CONSTRAINT "puzzles_adventure_fkey" FOREIGN KEY ("adventure") REFERENCES "public"."adventures"("id");
ALTER TABLE ONLY "public"."puzzles"
    ADD CONSTRAINT "puzzles_next_fkey" FOREIGN KEY ("next") REFERENCES "public"."puzzles"("id");

ALTER TABLE "internal"."adjectives" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "internal"."animals" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "internal"."answers" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "internal"."colours" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "internal"."hints" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "internal"."secrets" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "internal"."usedhints" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."adventures" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."games" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."guesses" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."puzzles" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Read access for users with code" ON "public"."puzzles" FOR SELECT USING (("id" = ( SELECT "games"."puzzle"
   FROM "public"."games"
  WHERE (("games"."code")::"text" = ("auth"."gamecode"())::"text"))));
CREATE POLICY "Read access for users with the code" ON "public"."guesses" FOR SELECT USING ((("game")::"text" = ("auth"."gamecode"())::"text"));
CREATE POLICY "Read access to adventures for authenticated users" ON "public"."adventures" FOR SELECT USING (("public" = true));
CREATE POLICY "Read access to games via code" ON "public"."games" FOR SELECT USING ((("code")::"text" = ("auth"."gamecode"())::"text"));
CREATE POLICY "Read access to own games" ON "public"."games" FOR SELECT USING (("auth"."uid"() = "user"));
CREATE POLICY "Read access to users with game codes" ON "public"."adventures" FOR SELECT USING (("auth"."gamecode"() IS NOT NULL));
CREATE POLICY "Write access for users with codes" ON "public"."guesses" FOR INSERT WITH CHECK ((("game")::"text" = ("auth"."gamecode"())::"text"));

GRANT ALL ON SCHEMA "internal" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";
GRANT ALL ON FUNCTION "public"."addfreeadventure"("adventureid" bigint) TO "postgres";
GRANT ALL ON FUNCTION "public"."addfreeadventure"("adventureid" bigint) TO "anon";
GRANT ALL ON FUNCTION "public"."addfreeadventure"("adventureid" bigint) TO "authenticated";
GRANT ALL ON FUNCTION "public"."addfreeadventure"("adventureid" bigint) TO "service_role";
GRANT ALL ON FUNCTION "public"."advancetonextpuzzle"() TO "postgres";
GRANT ALL ON FUNCTION "public"."advancetonextpuzzle"() TO "anon";
GRANT ALL ON FUNCTION "public"."advancetonextpuzzle"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."advancetonextpuzzle"() TO "service_role";
GRANT ALL ON FUNCTION "public"."checkguess"() TO "postgres";
GRANT ALL ON FUNCTION "public"."checkguess"() TO "anon";
GRANT ALL ON FUNCTION "public"."checkguess"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."checkguess"() TO "service_role";
GRANT ALL ON FUNCTION "public"."finishadventure"() TO "postgres";
GRANT ALL ON FUNCTION "public"."finishadventure"() TO "anon";
GRANT ALL ON FUNCTION "public"."finishadventure"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."finishadventure"() TO "service_role";
GRANT ALL ON FUNCTION "public"."gethints"("puzzleid" bigint, "gamecode" character varying) TO "anon";
GRANT ALL ON FUNCTION "public"."gethints"("puzzleid" bigint, "gamecode" character varying) TO "authenticated";
GRANT ALL ON FUNCTION "public"."gethints"("puzzleid" bigint, "gamecode" character varying) TO "service_role";
GRANT ALL ON FUNCTION "public"."getstats"("gamecode" character varying) TO "anon";
GRANT ALL ON FUNCTION "public"."getstats"("gamecode" character varying) TO "authenticated";
GRANT ALL ON FUNCTION "public"."getstats"("gamecode" character varying) TO "service_role";
GRANT ALL ON FUNCTION "public"."getteamcodejwt"("teamcode" "text") TO "anon";
GRANT ALL ON FUNCTION "public"."getteamcodejwt"("teamcode" "text") TO "authenticated";
GRANT ALL ON FUNCTION "public"."getteamcodejwt"("teamcode" "text") TO "service_role";
GRANT ALL ON FUNCTION "public"."requesthint"("puzzleid" bigint, "gamecode" character varying, "hintid" bigint) TO "anon";
GRANT ALL ON FUNCTION "public"."requesthint"("puzzleid" bigint, "gamecode" character varying, "hintid" bigint) TO "authenticated";
GRANT ALL ON FUNCTION "public"."requesthint"("puzzleid" bigint, "gamecode" character varying, "hintid" bigint) TO "service_role";
GRANT ALL ON FUNCTION "public"."setteamcode"() TO "postgres";
GRANT ALL ON FUNCTION "public"."setteamcode"() TO "anon";
GRANT ALL ON FUNCTION "public"."setteamcode"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."setteamcode"() TO "service_role";
GRANT ALL ON FUNCTION "public"."startadventure"() TO "postgres";
GRANT ALL ON FUNCTION "public"."startadventure"() TO "anon";
GRANT ALL ON FUNCTION "public"."startadventure"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."startadventure"() TO "service_role";
GRANT ALL ON TABLE "internal"."adjectives" TO "postgres";
GRANT ALL ON TABLE "internal"."adjectives" TO "service_role";
GRANT ALL ON TABLE "internal"."animals" TO "postgres";
GRANT ALL ON TABLE "internal"."animals" TO "service_role";
GRANT ALL ON TABLE "internal"."answers" TO "postgres";
GRANT ALL ON TABLE "internal"."answers" TO "service_role";
GRANT ALL ON TABLE "internal"."colours" TO "postgres";
GRANT ALL ON TABLE "internal"."colours" TO "service_role";
GRANT ALL ON TABLE "internal"."hints" TO "postgres";
GRANT ALL ON TABLE "internal"."hints" TO "service_role";
GRANT ALL ON SEQUENCE "internal"."hints_id_seq" TO "postgres";
GRANT ALL ON SEQUENCE "internal"."hints_id_seq" TO "service_role";
GRANT ALL ON TABLE "internal"."secrets" TO "postgres";
GRANT ALL ON TABLE "internal"."secrets" TO "service_role";
GRANT ALL ON TABLE "internal"."usedhints" TO "postgres";
GRANT ALL ON TABLE "internal"."usedhints" TO "service_role";
GRANT ALL ON SEQUENCE "internal"."usedhints_id_seq" TO "postgres";
GRANT ALL ON SEQUENCE "internal"."usedhints_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."adventures" TO "postgres";
GRANT ALL ON TABLE "public"."adventures" TO "anon";
GRANT ALL ON TABLE "public"."adventures" TO "authenticated";
GRANT ALL ON TABLE "public"."adventures" TO "service_role";
GRANT ALL ON SEQUENCE "public"."adventures_id_seq" TO "postgres";
GRANT ALL ON SEQUENCE "public"."adventures_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."adventures_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."adventures_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."games" TO "postgres";
GRANT ALL ON TABLE "public"."games" TO "anon";
GRANT ALL ON TABLE "public"."games" TO "authenticated";
GRANT ALL ON TABLE "public"."games" TO "service_role";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "postgres";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."guesses" TO "postgres";
GRANT ALL ON TABLE "public"."guesses" TO "anon";
GRANT ALL ON TABLE "public"."guesses" TO "authenticated";
GRANT ALL ON TABLE "public"."guesses" TO "service_role";
GRANT ALL ON SEQUENCE "public"."guesses_id_seq" TO "postgres";
GRANT ALL ON SEQUENCE "public"."guesses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."guesses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."guesses_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."puzzles" TO "postgres";
GRANT ALL ON TABLE "public"."puzzles" TO "anon";
GRANT ALL ON TABLE "public"."puzzles" TO "authenticated";
GRANT ALL ON TABLE "public"."puzzles" TO "service_role";
GRANT ALL ON SEQUENCE "public"."puzzles_id_seq" TO "postgres";
GRANT ALL ON SEQUENCE "public"."puzzles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."puzzles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."puzzles_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TYPES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TYPES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TYPES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TYPES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON TYPES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON TYPES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON TYPES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON TYPES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres_temporary_object_holder" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

ALTER TABLE "storage"."buckets" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "storage"."migrations" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "storage"."objects" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Read access for users" ON "storage"."objects" FOR SELECT USING ((("bucket_id" = 'puzzles'::"text") AND (("storage"."foldername"("name"))[1] IN ( SELECT "p"."storage_slug"
   FROM ("public"."puzzles" "p"
     JOIN "public"."games" "g" ON ((("g"."puzzle" = "p"."id") AND (("g"."code")::"text" = ("auth"."gamecode"())::"text"))))))));
