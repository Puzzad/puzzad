// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/greboid/puzzad/ent/adventure"
	"github.com/greboid/puzzad/ent/game"
	"github.com/greboid/puzzad/ent/guess"
	"github.com/greboid/puzzad/ent/user"
	"github.com/greboid/puzzad/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adventureFields := schema.Adventure{}.Fields()
	_ = adventureFields
	// adventureDescDescription is the schema descriptor for description field.
	adventureDescDescription := adventureFields[1].Descriptor()
	// adventure.DefaultDescription holds the default value on creation for the description field.
	adventure.DefaultDescription = adventureDescDescription.Default.(string)
	// adventureDescPrice is the schema descriptor for price field.
	adventureDescPrice := adventureFields[2].Descriptor()
	// adventure.DefaultPrice holds the default value on creation for the price field.
	adventure.DefaultPrice = adventureDescPrice.Default.(float64)
	// adventureDescPublic is the schema descriptor for public field.
	adventureDescPublic := adventureFields[3].Descriptor()
	// adventure.DefaultPublic holds the default value on creation for the public field.
	adventure.DefaultPublic = adventureDescPublic.Default.(bool)
	gameFields := schema.Game{}.Fields()
	_ = gameFields
	// gameDescCode is the schema descriptor for code field.
	gameDescCode := gameFields[1].Descriptor()
	// game.DefaultCode holds the default value on creation for the code field.
	game.DefaultCode = gameDescCode.Default.(func() string)
	// game.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	game.CodeValidator = gameDescCode.Validators[0].(func(string) error)
	guessMixin := schema.Guess{}.Mixin()
	guessMixinFields0 := guessMixin[0].Fields()
	_ = guessMixinFields0
	guessFields := schema.Guess{}.Fields()
	_ = guessFields
	// guessDescCreateTime is the schema descriptor for create_time field.
	guessDescCreateTime := guessMixinFields0[0].Descriptor()
	// guess.DefaultCreateTime holds the default value on creation for the create_time field.
	guess.DefaultCreateTime = guessDescCreateTime.Default.(func() time.Time)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescVerifyCode is the schema descriptor for verifyCode field.
	userDescVerifyCode := userFields[0].Descriptor()
	// user.DefaultVerifyCode holds the default value on creation for the verifyCode field.
	user.DefaultVerifyCode = userDescVerifyCode.Default.(func() string)
	// userDescVerifyExpiry is the schema descriptor for verifyExpiry field.
	userDescVerifyExpiry := userFields[1].Descriptor()
	// user.DefaultVerifyExpiry holds the default value on creation for the verifyExpiry field.
	user.DefaultVerifyExpiry = userDescVerifyExpiry.Default.(func() time.Time)
	// userDescResetCode is the schema descriptor for resetCode field.
	userDescResetCode := userFields[2].Descriptor()
	// user.DefaultResetCode holds the default value on creation for the resetCode field.
	user.DefaultResetCode = userDescResetCode.Default.(string)
	// userDescResetExpiry is the schema descriptor for resetExpiry field.
	userDescResetExpiry := userFields[3].Descriptor()
	// user.DefaultResetExpiry holds the default value on creation for the resetExpiry field.
	user.DefaultResetExpiry = userDescResetExpiry.Default.(time.Time)
	// userDescPasshash is the schema descriptor for passhash field.
	userDescPasshash := userFields[5].Descriptor()
	// user.DefaultPasshash holds the default value on creation for the passhash field.
	user.DefaultPasshash = userDescPasshash.Default.(string)
	// userDescAdmin is the schema descriptor for admin field.
	userDescAdmin := userFields[7].Descriptor()
	// user.DefaultAdmin holds the default value on creation for the admin field.
	user.DefaultAdmin = userDescAdmin.Default.(bool)
}
