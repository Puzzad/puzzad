// Code generated by ent, DO NOT EDIT.

package access

import (
	"fmt"
)

const (
	// Label holds the string label denoting the access type in the database.
	Label = "access"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// EdgeAdventure holds the string denoting the adventure edge name in mutations.
	EdgeAdventure = "adventure"
	// Table holds the table name of the access in the database.
	Table = "accesses"
	// AdventureTable is the table that holds the adventure relation/edge.
	AdventureTable = "accesses"
	// AdventureInverseTable is the table name for the Adventure entity.
	// It exists in this package in order to avoid circular dependency with the "adventure" package.
	AdventureInverseTable = "adventures"
	// AdventureColumn is the table column denoting the adventure relation/edge.
	AdventureColumn = "access_adventure"
)

// Columns holds all SQL columns for access fields.
var Columns = []string{
	FieldID,
	FieldStatus,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "accesses"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"access_adventure",
	"team_access",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Status defines the type for the "status" enum field.
type Status string

// Status values.
const (
	StatusPaid    Status = "Paid"
	StatusUnpaid  Status = "Unpaid"
	StatusExpired Status = "Expired"
)

func (s Status) String() string {
	return string(s)
}

// StatusValidator is a validator for the "status" field enum values. It is called by the builders before save.
func StatusValidator(s Status) error {
	switch s {
	case StatusPaid, StatusUnpaid, StatusExpired:
		return nil
	default:
		return fmt.Errorf("access: invalid enum value for status field: %q", s)
	}
}
