// Code generated by ent, DO NOT EDIT.

package puzzle

const (
	// Label holds the string label denoting the puzzle type in the database.
	Label = "puzzle"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldAnswer holds the string denoting the answer field in the database.
	FieldAnswer = "answer"
	// EdgeAdventure holds the string denoting the adventure edge name in mutations.
	EdgeAdventure = "adventure"
	// Table holds the table name of the puzzle in the database.
	Table = "puzzles"
	// AdventureTable is the table that holds the adventure relation/edge.
	AdventureTable = "puzzles"
	// AdventureInverseTable is the table name for the Adventure entity.
	// It exists in this package in order to avoid circular dependency with the "adventure" package.
	AdventureInverseTable = "adventures"
	// AdventureColumn is the table column denoting the adventure relation/edge.
	AdventureColumn = "adventure_puzzles"
)

// Columns holds all SQL columns for puzzle fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldAnswer,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "puzzles"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"adventure_puzzles",
	"guess_puzzle",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
