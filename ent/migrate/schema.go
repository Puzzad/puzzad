// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdventuresColumns holds the columns for the "adventures" table.
	AdventuresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// AdventuresTable holds the schema information for the "adventures" table.
	AdventuresTable = &schema.Table{
		Name:       "adventures",
		Columns:    AdventuresColumns,
		PrimaryKey: []*schema.Column{AdventuresColumns[0]},
	}
	// GamesColumns holds the columns for the "games" table.
	GamesColumns = []*schema.Column{
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Paid", "Unpaid", "Expired"}, Default: "Unpaid"},
		{Name: "code", Type: field.TypeString, Unique: true, Size: 40},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "adventure_id", Type: field.TypeInt},
	}
	// GamesTable holds the schema information for the "games" table.
	GamesTable = &schema.Table{
		Name:       "games",
		Columns:    GamesColumns,
		PrimaryKey: []*schema.Column{GamesColumns[2], GamesColumns[3]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "games_users_user",
				Columns:    []*schema.Column{GamesColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "games_adventures_adventures",
				Columns:    []*schema.Column{GamesColumns[3]},
				RefColumns: []*schema.Column{AdventuresColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// GuessesColumns holds the columns for the "guesses" table.
	GuessesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "content", Type: field.TypeString},
	}
	// GuessesTable holds the schema information for the "guesses" table.
	GuessesTable = &schema.Table{
		Name:       "guesses",
		Columns:    GuessesColumns,
		PrimaryKey: []*schema.Column{GuessesColumns[0]},
	}
	// ProgressesColumns holds the columns for the "progresses" table.
	ProgressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "progress_adventure", Type: field.TypeInt},
		{Name: "progress_puzzle", Type: field.TypeInt},
	}
	// ProgressesTable holds the schema information for the "progresses" table.
	ProgressesTable = &schema.Table{
		Name:       "progresses",
		Columns:    ProgressesColumns,
		PrimaryKey: []*schema.Column{ProgressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "progresses_adventures_adventure",
				Columns:    []*schema.Column{ProgressesColumns[1]},
				RefColumns: []*schema.Column{AdventuresColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "progresses_puzzles_puzzle",
				Columns:    []*schema.Column{ProgressesColumns[2]},
				RefColumns: []*schema.Column{PuzzlesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PuzzlesColumns holds the columns for the "puzzles" table.
	PuzzlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "answer", Type: field.TypeString},
		{Name: "adventure_puzzles", Type: field.TypeInt, Nullable: true},
		{Name: "guess_puzzle", Type: field.TypeInt, Nullable: true},
	}
	// PuzzlesTable holds the schema information for the "puzzles" table.
	PuzzlesTable = &schema.Table{
		Name:       "puzzles",
		Columns:    PuzzlesColumns,
		PrimaryKey: []*schema.Column{PuzzlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "puzzles_adventures_puzzles",
				Columns:    []*schema.Column{PuzzlesColumns[3]},
				RefColumns: []*schema.Column{AdventuresColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "puzzles_guesses_puzzle",
				Columns:    []*schema.Column{PuzzlesColumns[4]},
				RefColumns: []*schema.Column{GuessesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "verify_code", Type: field.TypeString, Unique: true},
		{Name: "verify_expiry", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Unverified", "Verified", "Disabled"}, Default: "Unverified"},
		{Name: "guess_team", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_guesses_team",
				Columns:    []*schema.Column{UsersColumns[6]},
				RefColumns: []*schema.Column{GuessesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserProgressColumns holds the columns for the "user_progress" table.
	UserProgressColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "progress_id", Type: field.TypeInt},
	}
	// UserProgressTable holds the schema information for the "user_progress" table.
	UserProgressTable = &schema.Table{
		Name:       "user_progress",
		Columns:    UserProgressColumns,
		PrimaryKey: []*schema.Column{UserProgressColumns[0], UserProgressColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_progress_user_id",
				Columns:    []*schema.Column{UserProgressColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_progress_progress_id",
				Columns:    []*schema.Column{UserProgressColumns[1]},
				RefColumns: []*schema.Column{ProgressesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdventuresTable,
		GamesTable,
		GuessesTable,
		ProgressesTable,
		PuzzlesTable,
		UsersTable,
		UserProgressTable,
	}
)

func init() {
	GamesTable.ForeignKeys[0].RefTable = UsersTable
	GamesTable.ForeignKeys[1].RefTable = AdventuresTable
	ProgressesTable.ForeignKeys[0].RefTable = AdventuresTable
	ProgressesTable.ForeignKeys[1].RefTable = PuzzlesTable
	PuzzlesTable.ForeignKeys[0].RefTable = AdventuresTable
	PuzzlesTable.ForeignKeys[1].RefTable = GuessesTable
	UsersTable.ForeignKeys[0].RefTable = GuessesTable
	UserProgressTable.ForeignKeys[0].RefTable = UsersTable
	UserProgressTable.ForeignKeys[1].RefTable = ProgressesTable
}
